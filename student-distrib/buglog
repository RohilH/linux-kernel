Bug Log

Checkpoint 1
IDT:
OS Crashes immediately on boot, even after IDT and GDT have been initialized. This should not be happening.
  Issue with the Reserved bits when setting up the IDT Entry. Issue has been resolved.

Had issue where it would not compile; gave error about incorrect %%eax.
  Issue resolved by git cloning as specified at beginning of MP

RTC:
RTC Interrupts only being sent once, it doesn’t cycle through and show all the characters.
  Issue with the EOI signal not being sent. Issue had nothing to do with the RTC Setup, was purely a result of the PIC not being set up.

PIC:
Slave PIC setup incorrectly. Currently we’re not actually sending EOI properly for devices attached to the slave pic, only master interrupts are properly registering the EOI signal.
  Issue has been resolved, we needed to have a separate case for sending the EOI for the slave PIC.

Paging:
No issues found; works correctly

Checkpoint 2
File System:
verylargetextwithverylongname.txt was working when doing cat, but only verylargetextwithverylongname.tx should
  Filename requires a check to make sure it is less than 32 bits

read_dentry_by_name and read_dentry_by_index can have invalid parameters when called by system calls
  Need to add NULL checks to make sure parameters passed into strncpy and strncmp are valid

Returning the wrong number of bytesRead in read_data because of misunderstanding what offset and length were
  Changed the for loop to go from offset to offset+length bytes and fixed issue

Checkpoint 3
Execute:
Did not check if command was a valid parameter
  Added a NULL check to fix the issue

Simple compile errors
  Fixed compiler errors by adding extra checks and making sure that we could compile correctly

Halt:
Currently the ESP and EBP that we are storing into the PCB structs, is not the correct value, and this causes us to return to some garbage location and page.
  Issue has been resolved, by moving the inline assembly within execute(), so that we are getting the ESP and EBP of the parent process.
  Also we redesigned our PCB struct to no longer store pointers to parent/child PCB structs. This design is not needed with the CurrProcessIndex.

Halt was not returning correctly
  Issue resolved: realized that system calls were 1-indexed instead of 0-indexed. Added empty 0x0 to make 1-indexed

Checkpoint 4
Vidmap:
Page faulting
  Issue resolved by fixing location to place screenstart

GetArgs:
verylargetextwithverylongname.txt was not working when doing cat
  Issue resolved by fixing file name length check in sysCalls.c

Checkpoint 5
Multiple Terminals:
Decided to launch all 3 terminals at the start instead of one by one because it was easier to keep track of the current active process
  Launched the terminals inside the PIT handler at the start

Scheduling:
When running “hello” the process finishes execution in whatever the previous terminal was.
  This issue has been resolved and was caused by not properly keeping track of the active process in each terminal.

When running “pingpong” in one terminal and “counter” in another terminal, “counter” prints its output diagonally
  Fixed the issue by removing storage variables in alternate putCterm function

RTC Virtualization:
RTC Virtualization only runs at maximum frequency
  Not properly counting the number of RTC Interrupts raised. Issue resolved.

Losing keyboard functionality after adding RTC Virtualization
  Issue was with the while loop not being broken out of, and the keyboard IRQ was never re-enabled. While loop condition needed to be reversed.

RTC Virtualization only runs in terminal one.
  Issue was due to issue #2 for RTC Virtualization.
  Also needed to decrement the counter in all three terminals when an RTC interrupt is raised.
